@import './variables';


@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
    // If the breakpoint doesn't exist in the map.
  }
  @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// Usage:
// h1 {
//   font-size: 14px;
//   line-height: 22px;
//   @include respond-above(md) {
//     font-size: 18px;
//     line-height: 26px;
//     font-weight: 600;
//   }
// }





//-------- Flexbox -------//
@mixin flex{
  display: flex;
}

@mixin flex-column {
    @include flex;
    flex-direction: column;
  }
  
@mixin flex-center {
  @include flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-center-vert {
  @include flex;
  align-items: center;
}

@mixin flex-center-horiz {
  @include flex;
  justify-content: center;
}

// Usage:
// .main-container {
//   height: 100vh;
//   @include flex-center;
//   .centered-item {
//     width: 100%;
//     max-width: 400px;
//   }
// }



//--------- Responsive Typography ------------//
@mixin fluid-font($min-width, $max-width, $min-font-size, $max-font-size) {
  $unit1: unit($min-width);
  $unit2: unit($max-width);
  $unit3: unit($min-font-size);
  $unit4: unit($max-font-size);
  @if $unit1 == $unit2 and $unit1 == $unit3 and $unit1 == $unit4 {
    & {
      font-size: $min-font-size;
      // line-height: $min-font-size * 1.618;
      @media screen and (min-width: $min-width) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})
        );
        // line-height: calc(
        //   #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
        //     1.618 *
        //     ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})
        // );
      }
      @media screen and (min-width: $max-width) {
        font-size: $max-font-size;
        // line-height: $max-font-size * 1.618;
      }
    }
  }
}

// Usage:
//   @include fluid-font(320px, 1024px, 22px, 55px);